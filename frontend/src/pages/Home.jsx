// Home.jsx
import React, { useState, useEffect } from 'react';
import { Card, FormField, Loader } from '../components/Index';

//Function to Render the Cards
const RenderCards = ({ data, title }) => {
    if (data?.length > 0) {
        return data.map((post) => <Card key={post._id} {...post} />);
    } else {
        return (
            <h2 className='text-xl text-red-500 mt-5 font-bold'>
                {title}
            </h2>
        );
    }
};

const Home = () => {
    // States for loading data and search post results
    const [loading, setLoading] = useState(false);
    const [allPosts, setAllPosts] = useState(null);
    const [searchText, setSearchText] = useState('');
    const [searchedResults, setSearchedResults] = useState(null);
    const [searchTimeout, setSearchTimeout] = useState(null);

    // Function to search posts
    const searchPosts = (e) => {
        clearTimeout(searchTimeout);
        setSearchText(e.target.value);

        setSearchTimeout(
            setTimeout(() => {
                const searchResult = allPosts.filter((item) =>
                    item.name.toLowerCase().includes(searchText.toLowerCase()) ||
                    item.prompt.toLowerCase().includes(searchText.toLowerCase())
                );
                setSearchedResults(searchResult);
            }, 500)
        );
    };

    // Fetch data on component mount
    useEffect(() => {
        const fetchResult = async () => {
            setLoading(true);
            try {
                const response = await fetch('http://localhost:8080/api/v1/post', {
                    method: 'GET',
                    headers: {
                        'Content-type': 'application/json',
                    },
                });

                if (response.ok) {
                    const result = await response.json();
                    setAllPosts(result.data.reverse());
                }
            } catch (error) {
                alert(error);
            } finally {
                setLoading(false);
            }
        };
        fetchResult();
    }, []);


    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-black text-[32px]'>
                    The Community Showcase
                </h1>
                <p className='text-[#666e75] mt-2 text-[16px] max-w-2xl'>
                    Browse through a collection of Imaginative and Visually stunning images generated by DALL-E AI
                </p>
            </div>
            <div className='mt-12'>
                <FormField 
                    LabelName="Search Post: "
                    name='text'
                    type='text'
                    placeholder='Enter something to search'
                    value={searchText}
                    handleChange={searchPosts}
                />
            </div>
            <div className='mt-10'>
                {loading ? (
                    <div className='flex justify-center items-center'>
                        <Loader />
                    </div>
                ) : (
                    <>
                        {searchText && (
                        <h2 className='font-medium text-gray-500 mb-3 text-xl'>
                            Showing results for <b className='text-black'>{searchText}</b>
                        </h2>
                        )}
                        <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                            {searchText?(
                                <RenderCards data={searchedResults} title='NO SEARCH RESULTS FOUND'/>
                                ):(
                                <RenderCards data={allPosts} title='NO POSTS FOUND'/>
                            )}
                        </div>
                    </>
                )}
            </div>
        </section>
    );
};

export default Home;
